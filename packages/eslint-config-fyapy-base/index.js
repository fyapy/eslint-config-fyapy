module.exports = {
  plugins: ['@typescript-eslint/eslint-plugin'],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:import/errors',
    'plugin:import/warnings',
    'plugin:import/typescript',
  ],
  parserOptions: {
    ecmaVersion: 'es2020',
    sourceType: 'module',
  },
  env: {
    node: true,
    browser: true,
    es6: true,
  },
  parser: '@typescript-eslint/parser',
  rules: {
    semi: ['error', 'never'],
    indent: 'off', // off is TypeScript
    '@typescript-eslint/indent': ['error', 2, { SwitchCase: 1 }],
    'linebreak-style': 0,
    quotes: ['error', 'single', { avoidEscape: true }],
    'max-len': ['error', 103, { ignoreTrailingComments: true }],
    'default-case': 'off',
    'no-prototype-builtins': 'off',
    'no-throw-literal': 'off',
    'no-use-before-define': 'off',
    camelcase: 'off',
    'spaced-comment': 'off',
    'import/no-unresolved': 'off',
    'no-underscore-dangle': 'off',
    'comma-dangle': ['error', 'always-multiline'],
    'space-before-function-paren': ['error', { anonymous: 'always', named: 'never' }],
    radix: ['error', 'always'],
    'arrow-parens': [0],
    'no-cond-assign': ['error', 'always'],
    'no-console': ['error', { allow: ['warn', 'error'] }],
    'prefer-template': 'off',
    'class-methods-use-this': [0],
    'no-plusplus': ['error', { allowForLoopAfterthoughts: true }],
    'no-confusing-arrow': 'off',
    'new-cap': 'off',
    'no-nested-ternary': 'off',
    'import/prefer-default-export': 'off',
    'no-unused-expressions': 'off',
    'import/no-extraneous-dependencies': 'off',
    '@typescript-eslint/no-unused-vars': ['error', { vars: 'all', argsIgnorePattern: '^_' }],
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/no-non-null-assertion': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    'eol-last': ['error', 'always'],
    'no-trailing-spaces': 'error',
    '@typescript-eslint/no-empty-function': 'off',
    '@typescript-eslint/member-delimiter-style': [
      'error',
      {
        multiline: {
          delimiter: 'none',
          requireLast: false,
        },
        singleline: {
          delimiter: 'comma',
          requireLast: false,
        },
      },
    ],
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/ban-ts-comment': 'off',
    'import/order': [
      'error',
      {
        groups: ['type', 'builtin', 'external', 'parent', 'sibling', 'index'],
      },
    ],
    'object-curly-newline': [
      'error',
      {
        ImportDeclaration: { minProperties: 4, multiline: true },
        ExportDeclaration: { minProperties: 4, multiline: true },
      },
    ],
    'no-useless-rename': [
      'error',
      {
        ignoreDestructuring: false,
        ignoreImport: false,
        ignoreExport: false,
      },
    ],
    '@typescript-eslint/no-var-requires': 'off',
    'object-curly-spacing': ['error', 'always'],
    '@typescript-eslint/no-extra-semi': ['error'],
    '@typescript-eslint/interface-name-prefix': 'off',
    'arrow-body-style': ['error', 'as-needed'],
  },
}
